@using Color = Kanelson.Shared.AlternativeColor
@using Kanelson.Domain.Questions

@Render()

@code {

    [Parameter]
    public int Idx { get; set; }

    [Parameter]
    public Alternative Alternative { get; set; } = null!;
    
    [Parameter]
    public EventCallback<Guid> OnClickCallback {get; set;}


    private AlternativeColor _alternativeColor = null!;


    protected override void OnInitialized()
    {
        base.OnInitialized();
        _alternativeColor = AlternativeColor.GetColor(Idx);
    }

    private async Task OnClick()
    {
        await OnClickCallback.InvokeAsync(Alternative.Id);
    }
    
    RenderFragment Render()
    {
        var style = $"background: {_alternativeColor?.Code} !important;";
        return @<MudButton Style=@style Class="e-paper d-flex align-center justify-center mud-width-full py-8" @onclick="@OnClick">
                    <span class="alternative-description">@Alternative.Description</span>
                </MudButton>;
    }
    
}