@page "/room/{Id:long}"
@using global::Kanelson.Contracts.Models
@using Kanelson.Services
@inject IRoomService RoomService
@inject IUserService UserService
@inject IStringLocalizer<Shared> Loc
<MudCard>
    <MudCardContent>
        @if (_summary is not null)
        {
            @if (_summary.Owner.Id == UserService.CurrentUser)
            {
                <Admin RoomId="@Id"></Admin>
            }
            else
            {
                <Player RoomId="@Id"></Player>
            }
        }
        else
        {
            <div>@Loc["Loading"]...</div>
        }
    </MudCardContent>
    <MudDivider/>
    <MudCardContent Class="room-footer">
        <span class="room-identifier">@Loc["Room"]: <b>@Id</b></span>
    </MudCardContent>
</MudCard>



@code {

    RoomSummary? _summary;

    [Parameter]
    public long Id { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        _summary = await RoomService.Get(Id);
        await base.OnInitializedAsync();
    }



}