@page "/room/{Id:long}"
@using Kanelson.Services
@using Kanelson.Models
@inject IRoomService RoomService
@inject IUserService UserService
@inject IStringLocalizer<Shared> Loc
@inject ISnackbar Snackbar
@inject NavigationManager Navigation
<MudCard>
    <MudCardContent>
        @if (_summary is not null)
        {
            @if (_summary.Owner.Id == UserService.CurrentUser)
            {
                <Admin RoomId="@Id"></Admin>
            }
            else
            {
                <Player RoomId="@Id"></Player>
            }
        }
        else
        {
            <div>@Loc["Loading"]...</div>
        }
    </MudCardContent>
    <MudDivider/>
    <MudCardContent Class="room-footer">
        <span class="room-identifier">@Loc["Room"]: <b>@Id</b></span>
    </MudCardContent>
</MudCard>



@code {

    RoomSummary? _summary;

    [Parameter]
    public long Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _summary = await RoomService.Get(Id);

        }
        catch (Exception)
        {
            Snackbar.Add(Loc["RoomNotFound"], Severity.Error, config =>
            {
                config.RequireInteraction = false;
                config.CloseAfterNavigation = false;
                config.ShowCloseIcon = false;
            });
            Navigation.NavigateTo("rooms");
        }
    }



}