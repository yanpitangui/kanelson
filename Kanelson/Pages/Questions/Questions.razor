@page "/questions"
@using Kanelson.Services
@using Kanelson.Models
@inject IQuestionService Service
@inject NavigationManager Navigation
@inject IStringLocalizer<Shared> Loc


@if (_questions is null)
{
    <h2>@Loc["Loading"]...</h2>
}
else
{
    <MudCard>
        <MudTable Elevation="25" Items="_questions" >
         <ToolBarContent>
             <MudText Typo="Typo.h6">@Loc["Questions"]</MudText>
             <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(()=>EditQuestion(null))"
                        Class="ml-auto">
                 @Loc["CreateQuestionButton"]
             </MudButton>
         </ToolBarContent>
        <HeaderContent>
            <MudTh>@Loc["Name"]</MudTh>
            <MudTh>@Loc["Edit/Delete"]</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Edit/Delete">
                <MudStack AlignItems="AlignItems.Center" Row="true" Spacing="3">
                    <MudFab @onclick="@(() => EditQuestion(@context.Id))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small"/>
                    <MudFab @onclick="@(() => RemoveQuestion(@context.Id))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small"/>
                </MudStack>

            </MudTd>
        </RowTemplate>
     </MudTable>
    </MudCard>


}


@code {

    private IEnumerable<QuestionSummary>? _questions;

    protected override async Task OnInitializedAsync()
    {
        _questions = await Service.GetQuestionsSummary();
        await base.OnInitializedAsync();
    }

    private async Task RemoveQuestion(Guid id)
    {
        await Service.RemoveQuestion(id);
        _questions = await Service.GetQuestionsSummary();

    }

    private void EditQuestion(Guid? id)
    {
        Navigation.NavigateTo($"question/{id}");
    }

}