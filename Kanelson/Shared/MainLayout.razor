@inherits LayoutComponentBase
<MudThemeProvider IsDarkMode="@true" />
<MudSnackbarProvider/>
<MudDialogProvider/>

<PageTitle>Kanelson</PageTitle>
<MudLayout>
    <CascadingAuthenticationState>
        <MudAppBar Elevation="0">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
            <MudSpacer/>
            <LoginDisplay/>
        </MudAppBar>
        <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
            <MudDrawerHeader>
                <MudText Typo="Typo.h6">Kanelson</MudText>
            </MudDrawerHeader>
            <NavMenu/>
        </MudDrawer>
        <MudMainContent>
            <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="my-16">
                <AuthorizeView>
                     <Authorized> 
                         @Body
                     </Authorized> 
                     <NotAuthorized> 
                         <MudText>É necessário fazer login para utilizar o sistema.</MudText>
                     </NotAuthorized>
                 </AuthorizeView> 
            </MudContainer>
        </MudMainContent>
    </CascadingAuthenticationState>
</MudLayout>


@* <div class="page"> *@
@*     <CascadingAuthenticationState> *@
@*         <div class="sidebar"> *@
@*             <NavMenu/> *@
@*         </div> *@
@* *@
@*         <main> *@
@*             <div class="top-row px-4 auth"> *@
@*                 <LoginDisplay/> *@
@*             </div> *@
@* *@
@*             <article class="content px-4"> *@
@*                 <AuthorizeView> *@
@*                     <Authorized> *@
@*                         @Body *@
@*                     </Authorized> *@
@*                     <NotAuthorized> *@
@*                         É necessário fazer login para utilizar o sistema. *@
@*                     </NotAuthorized> *@
@*                 </AuthorizeView> *@
@*             </article> *@
@* *@
@*         </main> *@
@*         </CascadingAuthenticationState> *@
@* *@
@* </div> *@

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}



